@page "/categories"

@inject NavigationManager NavigationManager
@inject UseCases.Interfaces.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.Interfaces.IDeleteCategoryUseCase DeleteCategoryUseCase

<h3>Manage Categories</h3>

@if (_categories != null)
{
     <table class="table">
       <thead>
            <tr>
                 <th>Name</th>
                 <th>Description</th>
                 <th></th>
                 <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in _categories)
            {
                 <tr>
                     <td>@category.Name</td>
                     <td>@category.Description</td>
                     <td>
                         <button type="button" @onclick="() => EditCategory(category)" class="btn btn-link">Edit</button>
                         <button type="button" @onclick="() => DeleteCategory(category)" class="btn btn-link">Delete</button>
                     </td>
                 </tr>   
            }
        </tbody>
     </table>
}
<br/>
<button type="button" @onclick="OnClickCreateNewCategory">Create new</button>

@code {

    private List<Category> _categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        LoadCategories();
    }

    private void OnClickCreateNewCategory()
    {
        NavigationManager.NavigateTo("/createcategory");
    }

    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.Id}");
    }

    private void DeleteCategory(Category category)
    {
        DeleteCategoryUseCase.Execute(category.Id);

        LoadCategories();
    }

    private void LoadCategories()
    {
        _categories = ViewCategoryUseCase.Execute()?.ToList();
    }
}
